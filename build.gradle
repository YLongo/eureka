buildscript {
    
    repositories {
        def ALIYUN_REPOSITORY_URL = 'https://maven.aliyun.com/repository/public/'
        def ALIYUN_JCENTER_URL = 'https://maven.aliyun.com/repository/jcenter/'
        def ALIYUN_GOOGLE_URL = 'https://maven.aliyun.com/repository/google/'
        def ALIYUN_GRADLE_PLUGIN_URL = 'https://maven.aliyun.com/repository/gradle-plugin/'
//        all { ArtifactRepository repo ->
//            if (repo instanceof MavenArtifactRepository) {
//                def url = repo.url.toString()
//                if (url.startsWith('https://repo1.maven.org/maven2/')) {
//                    project.logger.lifecycle "Repository ${repo.url} replaced by $ALIYUN_REPOSITORY_URL."
//                    remove repo
//                }
//                if (url.startsWith('https://jcenter.bintray.com/')) {
//                    project.logger.lifecycle "Repository ${repo.url} replaced by $ALIYUN_JCENTER_URL."
//                    remove repo
//                }
//                if (url.startsWith('https://dl.google.com/dl/android/maven2/')) {
//                    project.logger.lifecycle "Repository ${repo.url} replaced by $ALIYUN_GOOGLE_URL."
//                    remove repo
//                }
//                if (url.startsWith('https://plugins.gradle.org/m2/')) {
//                    project.logger.lifecycle "Repository ${repo.url} replaced by $ALIYUN_GRADLE_PLUGIN_URL."
//                    remove repo
//                }
//            }
//        }
        maven { url ALIYUN_REPOSITORY_URL }
        maven { url ALIYUN_JCENTER_URL }
        maven { url ALIYUN_GOOGLE_URL }
        maven { url ALIYUN_GRADLE_PLUGIN_URL }
        jcenter() 
    }

    dependencies {
        classpath 'com.netflix.nebula:gradle-extra-configurations-plugin:2.2.+'
    }
}

plugins {
    id 'nebula.netflixoss' version '3.6.0'
}

idea {
    project {
        languageLevel = '1.7'
    }
}

if (JavaVersion.current().isJava8Compatible()) {
    allprojects {
        tasks.withType(Javadoc) {
            options.addStringOption('Xdoclint:none', '-quiet')
        }
    }
}

allprojects {
    ext {
        githubProjectName = 'eureka'
        awsVersion = '1.11.105'
        servletVersion = '2.5'
        jerseyVersion = '1.19.1'
        jettisonVersion = '1.3.7'
        apacheHttpClientVersion = '4.3.4'
        guiceVersion = '4.1.0'
        servoVersion = '0.10.1'
        governatorVersion = '1.12.10'
        archaiusVersion = '0.7.5'
        blitzVersion = '1.34'
        mockitoVersion = '1.10.19'
        junit_version = '4.11'
        mockserverVersion = '3.9.2'
        jetty_version = '7.2.0.v20101020'
        jacksonVersion = '2.8.7'
        woodstoxVersion = '4.4.1'
    }
}

subprojects {
    apply plugin: 'nebula.netflixoss'
    apply plugin: 'java'

    group = "com.netflix.${githubProjectName}"

    sourceCompatibility = 1.7
    targetCompatibility = 1.7

    repositories {
        maven {
            url 'http://maven.aliyun.com/nexus/content/groups/public/'
        }
        jcenter()
    }

    test {
        forkEvery = 1
        // setting this property prevents java from grabbing focus when running the tests under osx
        systemProperty 'java.awt.headless', 'true'
    }

    jar {
        manifest {
            attributes('Build-Time-ISO-8601': new Date().format("yyyy-MM-dd'T'HH:mm:ssZ"))
        }
    }
}

